name: PHPUnit

on:
  workflow_call:
    inputs:
      lib-path:
        required: false
        type: string
      run-sonar:
        required: false
        type: boolean
        default: false

permissions:
  contents: read

jobs:
  build:
    if: ${{ always() }}
    needs: [ get_nightly_libraries ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, ubuntu-24.04-arm, windows-11-arm]
        php: [8.5, 8.4, 8.3]
  
    name: php-${{ matrix.php }} - ${{ matrix.os }}

    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      
    - uses: actions/checkout@v4
      with:
        lfs: false

    - name: Libraries Cache
      id: libraries-cache
      uses: actions/cache@v3
      with:
        path: lib_nightly
        key: lib_nightly-${{ steps.date.outputs.date }}
        enableCrossOsArchive: true

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: ffi, pcntl
        coverage: xdebug

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: php-composer-${{ matrix.php }}-${{ matrix.os }}-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          php-composer-${{ matrix.php }}-${{ matrix.os }}-

    - name: Install dependencies
      run: composer update --prefer-dist --no-interaction

    - name: Info
      run: |
        php info.php
        php info.php >> $GITHUB_STEP_SUMMARY

    - name: Run test suite
      env:
        DUCKDB_PHP_LIB_DIRECTORY: ${{ inputs.lib-path }}
      run: vendor/bin/phpunit test --coverage-clover=coverage-${{ matrix.php }}-${{ matrix.os }}.xml

    - name: Archive code coverage results
      if: ${{ inputs.run-sonar }}
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.php }}-${{ matrix.os }}
        path: coverage-${{ matrix.php }}-${{ matrix.os }}.xml

  sonar_scan:
    if: ${{ always() && inputs.run-sonar }}
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: false

      - name: Download code-coverage
        uses: actions/download-artifact@v4
        with:
          path: .
          merge-multiple: true

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  get_nightly_libraries:
    if: ${{ inputs.lib-path }}
    runs-on: ubuntu-latest

    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - uses: actions/checkout@v4
        with:
          lfs: false

      - name: Libraries Cache
        id: libraries-cache
        uses: actions/cache@v3
        with:
          path: lib_nightly
          key: lib_nightly-${{ steps.date.outputs.date }}

      - name: Get libraries
        if: ${{ steps.libraries-cache.outputs.cache-hit != 'true' }}
        run: ./scripts/get_libraries_nightly.sh